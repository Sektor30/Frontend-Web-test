{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/projectReactTres/FoodLogo/frontend/src/context/providers/ProductsContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer, useContext } from 'react';\nimport { getProducts, saveProduct, removeProduct } from '../../api/productsApi';\nimport { productsReducer, initialState } from '../reducer/productsReducer';\nimport { productActions } from '../actions/ProductsActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductContext = /*#__PURE__*/createContext(initialState);\nexport const useProducts = () => {\n  _s();\n\n  const context = useContext(ProductContext);\n  return context;\n};\n\n_s(useProducts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport const ProductProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(productsReducer, initialState);\n\n  const loadProducts = async () => {\n    dispatch({\n      type: productActions.LOAD_PRODUCTS\n    });\n\n    try {\n      const res = await getProducts();\n\n      if (res.data) {\n        dispatch({\n          type: productActions.LOAD_PRODUCTS_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productActions.LOAD_PRODUCTS_ERROR,\n        payload: error.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  const addNewProduct = async newProduct => {\n    dispatch({\n      type: productActions.LOAD_SAVE_PRODUCT\n    });\n\n    try {\n      const res = await saveProduct(newProduct);\n\n      if (res.data) {\n        dispatch({\n          type: productActions.LOAD_SAVE_PRODUCT_SUCCESS,\n          payload: res.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: productActions.LOAD_SAVE_PRODUCT_ERROR,\n        payload: error.message\n      });\n    }\n  };\n\n  const deleteProduct = async id => {\n    dispatch({\n      type: productActions.DELETE_PRODUCT\n    });\n\n    try {\n      await removeProduct(id);\n      dispatch({\n        type: productActions.DELETE_PRODUCT_SUCCESS,\n        payload: id\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productActions.DELETE_PRODUCT_ERROR,\n        payload: error.message\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: { ...state,\n      getProducts,\n      addNewProduct,\n      deleteProduct\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(ProductProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/alex/Desktop/projectReactTres/FoodLogo/frontend/src/context/providers/ProductsContext.js"],"names":["createContext","useEffect","useReducer","useContext","getProducts","saveProduct","removeProduct","productsReducer","initialState","productActions","ProductContext","useProducts","context","ProductProvider","children","state","dispatch","loadProducts","type","LOAD_PRODUCTS","res","data","LOAD_PRODUCTS_SUCCESS","payload","error","console","log","LOAD_PRODUCTS_ERROR","message","addNewProduct","newProduct","LOAD_SAVE_PRODUCT","LOAD_SAVE_PRODUCT_SUCCESS","LOAD_SAVE_PRODUCT_ERROR","deleteProduct","id","DELETE_PRODUCT","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_ERROR"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useReducer, useContext } from 'react'\nimport { getProducts, saveProduct, removeProduct } from '../../api/productsApi'\nimport { productsReducer, initialState } from '../reducer/productsReducer'\nimport { productActions } from '../actions/ProductsActions'\n\nexport const ProductContext = createContext(initialState);\n\nexport const useProducts = () => {\n    const context = useContext(ProductContext);\n    return context;\n}\n\nexport const ProductProvider = ({children}) => {\n\n    const [state, dispatch] = useReducer(productsReducer, initialState)\n\n    const loadProducts = async () => {\n        dispatch({ type: productActions.LOAD_PRODUCTS });\n        \n        try {\n            const res = await getProducts();\n        \n            if(res.data) {\n                dispatch({ \n                    type: productActions.LOAD_PRODUCTS_SUCCESS, \n                    payload: res.data \n                });\n            }\n        } catch (error) {\n            console.log(error);\n            dispatch({ \n                type: productActions.LOAD_PRODUCTS_ERROR, \n                payload: error.message,\n            });\n        }\n\n    }\n\n    useEffect(() => {\n        loadProducts();\n    },[]);\n\n    const addNewProduct = async (newProduct) => {\n\n        dispatch({ type: productActions.LOAD_SAVE_PRODUCT });\n\n        try {\n            const res = await saveProduct(newProduct);\n        \n            if(res.data) {\n                dispatch({ \n                    type: productActions.LOAD_SAVE_PRODUCT_SUCCESS, \n                    payload: res.data ,\n                })\n            }\n        } catch (error) {\n            dispatch({ \n                type: productActions.LOAD_SAVE_PRODUCT_ERROR, \n                payload: error.message,\n            });\n        }\n\n    };\n\n    const deleteProduct = async (id) => {\n\n        dispatch({\n            type: productActions.DELETE_PRODUCT,\n        })\n\n        try {\n            await removeProduct(id);\n            dispatch({\n                type: productActions.DELETE_PRODUCT_SUCCESS,\n                payload: id\n            })\n            return true;\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: productActions.DELETE_PRODUCT_ERROR,\n                payload: error.message\n            })\n        }\n    }\n\n    return (<ProductContext.Provider value={{ ...state, getProducts, addNewProduct, deleteProduct }}>\n        {children}\n    </ProductContext.Provider>)\n};"]},"metadata":{},"sourceType":"module"}