{"ast":null,"code":"import { CartActions } from '../actions/CartActions';\nexport const initialState = {\n  items: [],\n  totalItems: 0,\n  totalPrice: 0\n};\nexport const initializer = function () {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return JSON.parse(localStorage.getItem('cart')) || initialState;\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case CartActions.APPEND_ITEM:\n      {\n        const newItems = state.items.find(item => item._id === payload.item._id) ? state.items.map(item => item._id === payload.item._id ? { ...item,\n          quantity: item.quantity + payload.increment\n        } : item) : [...state.items, { ...payload.item,\n          quantity: 1\n        }];\n        const totalPrice = newItems.reduce((total, _ref) => {\n          let {\n            price,\n            quantity\n          } = _ref;\n          return total + price * quantity;\n        }, 0);\n        return { ...state,\n          items: newItems,\n          totalItems: state.totalItems + payload.increment,\n          totalPrice\n        };\n      }\n\n    case CartActions.DECREMENT_ITEM:\n      {\n        const items = state.items.find(item => item._id === payload.item._id).quantity === 1 ? state.items.filter(item => item._id !== payload.item._id) : state.items.map(item => item._id === payload.item._id ? { ...item,\n          quantity: item.quantity - payload.decrement\n        } : item);\n        const totalPrice = items.reduce((total, _ref2) => {\n          let {\n            price,\n            quantity\n          } = _ref2;\n          return total + price * quantity;\n        }, 0);\n        return { ...state,\n          items,\n          totalPrice,\n          totalItems: state.totalItems - payload.decrement\n        };\n      }\n\n    case CartActions.REMOVE_ITEM:\n      {\n        const itemFound = state.items.find(item => item._id === payload._id);\n        const items = state.items.filter(item => item._id !== payload._id);\n        const totalPrice = items.reduce((total, _ref3) => {\n          let {\n            price,\n            quantity\n          } = _ref3;\n          return total + price * quantity;\n        }, 0);\n        return { ...state,\n          items,\n          totalItems: state.totalItems - itemFound.quantity,\n          totalPrice\n        };\n      }\n\n    case CartActions.CLEAR_CART:\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/alex/Desktop/projectReactTres/FoodLogo/frontend/src/context/reducer/cartReducer.js"],"names":["CartActions","initialState","items","totalItems","totalPrice","initializer","JSON","parse","localStorage","getItem","cartReducer","state","type","payload","APPEND_ITEM","newItems","find","item","_id","map","quantity","increment","reduce","total","price","DECREMENT_ITEM","filter","decrement","REMOVE_ITEM","itemFound","CLEAR_CART"],"mappings":"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","sourcesContent":["import { CartActions } from '../actions/CartActions'\n\nexport const initialState = {\n    items: [],\n    totalItems: 0,\n    totalPrice: 0\n};\n\nexport const initializer = (initialState = initialState) => JSON.parse(localStorage.getItem('cart')) || initialState;\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n\n    switch (type) {\n        case CartActions.APPEND_ITEM: {\n\n            const newItems = state.items.find(item => item._id === payload.item._id)\n             ? state.items.map((item) => item._id === payload.item._id\n                ? {...item, quantity: item.quantity + payload.increment}: item\n                ) : [...state.items, { ...payload.item, quantity: 1 }]\n            \n            \n            const totalPrice = newItems.reduce((total, {price, quantity}) => total + price * quantity, 0);\n\n            return {\n                ...state,\n                items: newItems,\n                totalItems: state.totalItems + payload.increment,\n                totalPrice,\n            }\n        }\n        case CartActions.DECREMENT_ITEM:{\n\n            const items = state.items.find(item => item._id === payload.item._id).quantity === 1\n                ? state.items.filter((item) => item._id !== payload.item._id)\n                : state.items.map(item => item._id === payload.item._id ? {...item, quantity: item.quantity - payload.decrement} : item)\n\n            const totalPrice = items.reduce((total, {price, quantity}) => total + price * quantity, 0);\n\n            return {\n                ...state,\n                items,\n                totalPrice,\n                totalItems: state.totalItems - payload.decrement\n            }\n        }\n        case CartActions.REMOVE_ITEM: {\n\n            const itemFound = state.items.find((item) => item._id === payload._id);\n            const items = state.items.filter((item) => item._id !== payload._id);\n\n            const totalPrice = items.reduce((total, {price, quantity}) => total + price * quantity, 0);\n\n            return {\n                ...state,\n                items,\n                totalItems: state.totalItems - itemFound.quantity,\n                totalPrice\n            }\n        }\n\n        case CartActions.CLEAR_CART:\n            return initialState;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}