{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Downloads/GITHUB/testFront/frontend/src/context/providers/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from 'react';\nimport { register, profile, login } from '../../api/authApi';\nimport { initialState, authReducer } from '../reducer/authReducer';\nimport { AuthActions } from '../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const useAuth = () => {\n  _s();\n\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"Debería estar dentro de AuthProvider\");\n  }\n\n  return context;\n};\n\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport const AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const signup = async _ref2 => {\n    let {\n      email,\n      password\n    } = _ref2;\n    dispatch({\n      type: AuthActions.AUTH_SIGNUP\n    });\n\n    try {\n      const res = await register({\n        email,\n        password\n      });\n      const {\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n\n      if (token) {\n        const resUser = await profile(token);\n        localStorage.setItem(\"user\", JSON.stringify(resUser.data));\n        dispatch({\n          type: AuthActions.AUTH_SIGNUP_SUCCESS,\n          payload: {\n            token,\n            user: resUser.data\n          }\n        });\n        return resUser.data;\n      }\n    } catch (error) {\n      if (error.response.data) {\n        dispatch({\n          type: AuthActions.AUTH_SIGNUP_ERROR,\n          payload: error.response.data.message\n        });\n      }\n    }\n  };\n\n  const signin = async _ref3 => {\n    let {\n      email,\n      password\n    } = _ref3;\n    dispatch({\n      type: AuthActions.AUTH_SIGNIN\n    });\n\n    try {\n      const res = await login({\n        email,\n        password\n      });\n      const {\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n\n      if (token) {\n        const resUser = await profile(token);\n        localStorage.setItem(\"user\", JSON.stringify(resUser.data));\n        dispatch({\n          type: AuthActions.AUTH_SIGNIN_SUCCESS,\n          payload: {\n            token,\n            user: resUser.data\n          }\n        });\n        return resUser.data;\n      }\n    } catch (error) {\n      if (error.response.data) {\n        dispatch({\n          type: AuthActions.AUTH_SIGNIN_ERROR,\n          payload: error.response.data.message\n        });\n      }\n    }\n  };\n\n  const logout = async () => {\n    localStorage.clear();\n    dispatch({\n      type: AuthActions.AUTH_LOGOUT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      signup,\n      signin,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/alex/Downloads/GITHUB/testFront/frontend/src/context/providers/AuthContext.js"],"names":["createContext","useContext","useReducer","register","profile","login","initialState","authReducer","AuthActions","AuthContext","useAuth","context","Error","AuthProvider","children","state","dispatch","signup","email","password","type","AUTH_SIGNUP","res","token","data","localStorage","setItem","resUser","JSON","stringify","AUTH_SIGNUP_SUCCESS","payload","user","error","response","AUTH_SIGNUP_ERROR","message","signin","AUTH_SIGNIN","AUTH_SIGNIN_SUCCESS","AUTH_SIGNIN_ERROR","logout","clear","AUTH_LOGOUT"],"mappings":"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","sourcesContent":["import {createContext, useContext, useReducer} from 'react'\nimport { register, profile, login } from '../../api/authApi'\nimport { initialState, authReducer } from '../reducer/authReducer'\nimport {AuthActions} from '../actions/authActions'\n\nexport const AuthContext = createContext(initialState);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if(!context) {\n        throw new Error(\"Debería estar dentro de AuthProvider\");\n    }\n    return context;\n};\n\nexport const AuthProvider = ({children}) => {\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    const signup = async ({email, password}) => {\n        dispatch({type: AuthActions.AUTH_SIGNUP})\n        try {\n            const res = await register({email, password});\n            const {token} = res.data;\n\n            localStorage.setItem(\"token\", token);\n\n            if(token) {\n                const resUser = await profile(token);\n\n                localStorage.setItem(\"user\", JSON.stringify(resUser.data));\n\n                dispatch({ \n                    type: AuthActions.AUTH_SIGNUP_SUCCESS, \n                    payload: {\n                        token,\n                        user: resUser.data\n                    },\n                });\n\n                return resUser.data;\n            }\n\n        } catch (error) {\n            if(error.response.data) {\n                dispatch({ \n                    type: AuthActions.AUTH_SIGNUP_ERROR, \n                    payload: error.response.data.message\n                });\n            }\n        }\n    };\n\n    const signin = async ({email, password}) => {\n        dispatch({type: AuthActions.AUTH_SIGNIN})\n        try {\n            const res = await login({email, password});\n            const {token} = res.data;\n\n            localStorage.setItem(\"token\", token);\n\n            if(token) {\n                const resUser = await profile(token);\n\n                localStorage.setItem(\"user\", JSON.stringify(resUser.data));\n\n                dispatch({ \n                    type: AuthActions.AUTH_SIGNIN_SUCCESS, \n                    payload: {\n                        token,\n                        user: resUser.data\n                    },\n                });\n\n                return resUser.data;\n            }\n\n        } catch (error) {\n            if(error.response.data) {\n                dispatch({ \n                    type: AuthActions.AUTH_SIGNIN_ERROR, \n                    payload: error.response.data.message\n                });\n            }\n        }\n    };\n\n    const logout = async () => {\n        localStorage.clear();\n        dispatch({\n            type: AuthActions.AUTH_LOGOUT,\n        })\n    }\n\n    return <AuthContext.Provider value={{ ...state, signup, signin, logout }}>\n        {children}\n    </AuthContext.Provider>\n}\n\n"]},"metadata":{},"sourceType":"module"}